# config file of gunicorn for demo web application

# project dir
pythonpath = "/var/www/demo/"

 
# the process name application, for top,ps command. need "pip install setproctitle" module 
proc_name = "demo"

# listen address
bind = "unix:/var/www/demo/myproject.sock"

# Run user and group of the application
user = "www-data"
group = "www-data"
umask = 0022

# number of work process
workers = 3

# connections
worker_connections = 512
backlog = 512

# need "pip install gevent"
worker_class = "gevent"

# The maximum number of requests a worker will process before restarting.
max_requests = 2500

# The number of seconds to wait for requests on a Keep-Alive connection
keepalive = 600

# Timeout for graceful workers restart.
# Generally set to thirty seconds. How max time worker can handle request after got restart signal. If the time is up worker will be force killed.
timeout = 10
gracefule_timeout = 5

# preload app code in master, please set False if set True, the reload will not real reload the django settings
preload_app = False

# Daemon able
daemon = True

# It's needed for decide the real REMOTE_ADDR
forwarded_allow_ips = "*"

# Log
accesslog = "/var/log/gunicorn/access.log"
access_log_format = '%(p)s %(h)s - %(t)s [%(D)s] "%(r)s" %(s)s %(b)s'
errorlog = "/var/log/gunicorn/error.log"
loglevel = "info"

import os
# By default the work process is set to be 0, even define umask = 0022 in config settings.
# So use the callback function "post_worker_init" to reset the umask, it works fine.
def post_worker_init(worker):
    os.umask(umask)

